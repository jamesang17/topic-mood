{"version":3,"sources":["twitter.svg","components/logProps.js","ingestion/HistoricalRuns.js","ingestion/TopicInputField.js","ingestion/StartIngestMenu.js","ingestion/IngestionModule.js","monitoring/ChartProvider.js","monitoring/ListTopics.js","monitoring/MonitorTopicInput.js","monitoring/SentimentLineChart.js","monitoring/OverallSentiment.js","monitoring/Sentences.js","monitoring/MonitoringModule.js","components/MenuAppBar.js","components/ModuleContainer.js","themes/Theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","logProps","WrappedComponent","prevProps","console","log","this","props","React","Component","styles","makeStyles","root","width","container","maxHeight","HistoricalRuns","handleChangePage","event","newPage","setState","page","handleChangeRowsPerPage","rowsPerPage","state","target","value","bind","columns","id","label","minWidth","align","format","toLocaleString","createData","run_id","name","status","starttime","endtime","rows","classes","Paper","className","elevation","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","key","style","TableBody","slice","row","hover","role","tabIndex","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","onChangeRowsPerPage","withStyles","TopicInputField","handleClick","Grid","spacing","alignItems","item","TextField","variant","helperText","onChange","e","currentTarget","Button","size","color","onClick","fontSize","useStyles","theme","margin","extendedIcon","marginRight","StartIngestMenu","Fab","IngestionModule","wrapper","createRef","myRef","ref","MContext","createContext","ChartProvider","topic","data","latestSen","posSent","negSent","handleSubmit","handleChange","date","sentiment","axios","get","then","res","Provider","setTopic","setData","children","maxWidth","backgroundColor","palette","background","paper","ListTopics","List","ListItem","button","ListItemText","primary","Divider","divider","light","MonitorTopicInput","Consumer","context","contextType","SentimentLineChart","height","top","right","left","bottom","strokeDasharray","dataKey","type","stroke","activeDot","r","OverallSentiment","renderEmoji","sentVal","Sentences","MonitoringModule","flexGrow","menuButton","title","MenuAppBar","AppBar","position","Toolbar","IconButton","edge","Typography","src","logo","alt","TabPanel","index","other","hidden","aria-labelledby","Box","p","a11yProps","ModuleContainer","useState","setValue","Tabs","newValue","Tab","createMuiTheme","blue","secondary","cyan","overrides","MuiButton","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c7c78ab5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twitter.f9efc7fe.svg\";","import React from 'react';\n\nfunction logProps(WrappedComponent) {\n  class LogProps extends React.Component {\n    componentDidUpdate(prevProps) {\n      console.log('old props:', prevProps);\n      console.log('new props:', this.props);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return LogProps;\n}\n\nexport default logProps;","import React from 'react';\nimport logProps from '../components/logProps';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles({\n    root: {\n    width: '100%',\n    },\n    container: {\n    maxHeight: 440,\n    },\n});\n\nclass HistoricalRuns extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            page: 0,\n            rowsPerPage: 10\n        };\n        this.handleChangePage = this.handleChangePage.bind(this);\n        this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n    }\n\n\n    handleChangePage = (event, newPage) => {\n        this.setState({ page: newPage });\n    };\n\n    handleChangeRowsPerPage = (event) => {\n        this.setState({ rowsPerPage: this.state.rowsPerPage+event.target.value })\n        this.setState({ page: 0 });\n    };\n\n\n  render() {\n    const columns = [\n      { id: 'run_id', label: 'Run Id', minWidth: 100 },\n      { id: 'name', label: 'Name', minWidth: 100 },\n      { id: 'status', label: 'Status', minWidth: 100 },\n      {\n        id: 'starttime',\n        label: 'Start Time',\n        minWidth: 100,\n        align: 'right',\n        format: (value) => value.toLocaleString(),\n      },\n      {\n        id: 'endtime',\n        label: 'End Time',\n        minWidth: 100,\n        align: 'right',\n        format: (value) => value.toLocaleString(),\n      },\n    ];\n\n    function createData(run_id, name, status, starttime, endtime) {\n      return { run_id, name, status, starttime, endtime };\n    }\n\n    const rows = [\n      createData('15','India', 'In Progress', \"2020-03-28 12:40:56\", \"2020-03-28 13:20:06\"),\n      createData('14','China', 'Success', \"2020-03-28 12:40:56\", \"2020-03-28 13:20:06\"),\n      createData('13','Italy', 'Success', \"2020-03-28 12:40:56\", \"2020-03-28 13:20:06\"),\n      createData('12','United States', 'Success', \"2020-03-28 12:40:56\", \"2020-03-28 13:20:06\"),\n      createData('11','Canada', 'Success', \"2020-03-28 12:40:56\", \"2020-03-28 13:20:06\"),\n      createData('10','Australia', 'Success', \"2020-03-28 12:40:56\", \"2020-03-28 13:20:06\"),\n      createData('9','Germany', 'Failed', \"2020-03-28 12:40:56\", \"2020-03-28 13:20:06\"),\n      createData('8','Ireland', 'Failed', \"2020-03-28 12:40:56\", \"2020-03-28 13:20:06\"),\n      createData('7','Mexico', 'Success', \"2020-03-28 12:40:56\", \"2020-03-28 13:20:06\"),\n      createData('6','Japan', 'Success', \"2020-03-28 12:40:56\", \"2020-03-28 13:20:06\"),\n      createData('5','France', 'Success', \"2020-03-28 12:40:56\", \"2020-03-28 13:20:06\"),\n      createData('4','United Kingdom', 'Success', \"2020-03-28 12:40:56\", \"2020-03-28 13:20:06\"),\n      createData('3','Russia', 'Success', \"2020-03-28 12:40:56\", \"2020-03-28 13:20:06\"),\n      createData('2','Nigeria', 'Success', \"2020-03-28 12:40:56\", \"2020-03-28 13:20:06\"),\n      createData('1','Brazil', 'Success', \"2020-03-28 12:40:56\", \"2020-03-28 13:20:06\"),\n    ];\n\n    const classes = styles;\n\n    return (\n        <Paper className={classes.root} elevation={3}>\n            <h6>Previous Runs</h6>\n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {rows.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map((row) => {\n                    return (\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.run_id}>\n                            {columns.map((column) => {\n                                const value = row[column.id];\n                                return (\n                                    <TableCell key={column.id} align={column.align}>\n                                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                                    </TableCell>\n                                );\n                            })}\n                        </TableRow>\n                    );\n                    })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={this.state.rowsPerPage}\n                page={this.state.page}\n                onChangePage={this.handleChangePage}\n                onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            />\n        </Paper>\n      );\n    }\n}\n\nexport default logProps(withStyles(styles)(HistoricalRuns));\n// export default React.forwardRef((props, ref) => <HistoricalRuns \n//   innerRef={ref} {...props}\n// />);","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\n\n\nclass TopicInputField extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\"\n        };\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        console.log(\"button was clicked!\")\n        console.log(\"value: \" + this.state.value)\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container spacing={2} alignItems=\"flex-end\">\n                  <Grid item>\n                    <TextField variant=\"standard\" label=\"Topic to analyze\" \n                        className=\"Input-field\" helperText=\"single topics e.g. Twitter, Python\"\n                        value={this.state.value}\n                        onChange={(e) => this.setState({value: e.currentTarget.value})}\n                        />\n                  </Grid>\n                  <Grid item>\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\"\n                        onClick={this.handleClick}>\n                        <SearchIcon fontSize=\"default\"/>\n                    </Button>\n                  </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default TopicInputField;","import React from 'react';\nimport TopicInputField from './TopicInputField';\nimport Fab from '@material-ui/core/Fab';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nclass StartIngestMenu extends React.Component {\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<TopicInputField />\n\t\t\t\t<br/>\n\t\t\t\t<Fab variant=\"extended\">\n        \t\t\tStart Ingestion\n      \t\t\t</Fab>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(useStyles)(StartIngestMenu);","import React from 'react';\nimport HistoricalRuns from './HistoricalRuns'\nimport StartIngestMenu from './StartIngestMenu'\nimport './IngestionModule.css'\n\nclass IngestionModule extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    componentDidMount() {\n        /* Uses DOM node  */ \n    }\n\n    wrapper = React.createRef();\n\n    render() {\n        return (\n            <div className=\"Ingestion-module\">\n                <div className=\"Ingestion-component\">\n                    <StartIngestMenu />\n                </div>\n                <div className=\"Ingestion-component\">\n                    <HistoricalRuns ref={this.wrapper} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default IngestionModule;","import React from 'react';\nimport axios from 'axios';\n\nexport const MContext = React.createContext(); // exporting context object\n\nexport default class ChartProvider extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tvalue: \"\",\n\t\t\ttopic: \"\",\n\t\t\tdata: [],\n\t\t\tlatestSen: \"\",\n\t\t\tposSent: \"\",\n\t\t\tnegSent: \"\"\n\t\t}\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\thandleChange(event) {\n        this.setState({value: event.currentTarget.value});\n    }\t\n\n\thandleSubmit(event) {\n\t\tconsole.log(\"Button was clicked!\");\n        console.log(\"value: \" + this.state.value);\n\n        this.setState({ data: [\n\t\t\t\t{date: \"2020-03-31\", sentiment: 0.018},\n\t\t\t\t{date: \"2020-04-01\", sentiment: 0.8258},\n\t\t\t\t{date: \"2020-04-02\", sentiment: 0.258},\n\t\t\t\t{date: \"2020-04-03\", sentiment: 0.0458}\n\t\t\t]});\n\t\tthis.setState({topic: \"nyc\"});\n\n        const sentiment = {\n            topic: this.state.value\n        };\n\n        axios.get('https://wwxa5xebjh.execute-api.us-east-1.amazonaws.com/production/sentimentresults/topics')\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n            })\n        this.setState({latestSen: 0.0458});\n        this.setState({posSent: \"this is great!\"});\n        this.setState({negSent: \"this sucks\"});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<MContext.Provider value = {\n\t\t\t\t{ state: this.state, \n\t\t\t\t\tsetTopic: (value) => this.setState({\n\t\t\t\t\t\ttopic: value\n\t\t\t\t\t}),\n\t\t\t\t\tsetData: (value) => this.setState({\n\t\t\t\t\t\tdata: value\n\t\t\t\t\t}),\n\t\t\t\t\thandleSubmit: this.handleSubmit,\n\t\t\t\t\thandleChange: this.handleChange\n\t\t\t\t}\n\t\t\t}>\n\t\t\t{this.props.children} \n\t\t\t</MContext.Provider>\n\t\t)\n\t}\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nclass ListTopics extends React.Component {\n\n    render() {\n        const classes = useStyles;\n\n        return (\n            <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\n                <ListItem button>\n                    <ListItemText primary=\"NYC\" />\n                </ListItem>\n                <Divider />\n                <ListItem button divider>\n                    <ListItemText primary=\"NBA\" />\n                </ListItem>\n                <ListItem button>\n                    <ListItemText primary=\"Hospital\" />\n                </ListItem>\n                <Divider light />\n                <ListItem button>\n                    <ListItemText primary=\"Star Wars\" />\n                </ListItem>\n            </List>\n        )\n    }\n}\n\nexport default withStyles(useStyles)(ListTopics);","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport { MContext } from './ChartProvider';\n\nclass MonitorTopicInput extends React.Component {\n\n    render() {\n    \treturn (\n\t\t\t<div>\n\t\t\t\t<MContext.Consumer>\n\t\t\t\t\t{(context) => (\n\t\t\t\t\t\t<Grid container spacing={2} alignItems=\"flex-end\">\n\t                    <Grid item>\n\t                        <TextField variant=\"standard\" label=\"Search Analyzed Topics\" \n\t                            helperText=\"single topics e.g. Twitter, Python\"\n\t                            value={this.context.topic}\n\t                            onChange={this.context.handleChange}\n\t                        />\n\t                    </Grid>\n\t                    <Grid item>\n\t                        <Button variant=\"contained\" size=\"large\" color=\"primary\"\n\t                            onClick={this.context.handleSubmit}>\n\t                            <SearchIcon fontSize=\"default\"/>\n\t                        </Button>\n\t                    </Grid>\n\t                </Grid>\n\t\t\t\t\t)}\n\t                </MContext.Consumer>\n            </div>    \t\t\n    \t)\n    }\n}\n\nMonitorTopicInput.contextType = MContext;\nexport default MonitorTopicInput;","import React from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\nimport { MContext } from './ChartProvider';\nimport './SentimentLineChart.css';\n\nclass SentimentLineChart extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\n\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\n\t}\n\n\tcomponentWillUnmount() {\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<MContext.Consumer>\n\t\t\t\t{(context) => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>Topic: {context.state.topic}</p>\n\t\t\t\t\t\t<div className=\"Chart-container\">\n\t\t\t\t\t\t\t<ResponsiveContainer width=\"80%\" height={400}>\n\t\t\t\t\t\t\t\t<LineChart\n\t\t\t\t\t\t\t        data={context.state.data}\n\t\t\t\t\t\t\t        margin={{\n\t\t\t\t\t\t\t          top: 5, right: 20, left: 20, bottom: 5,\n\t\t\t\t\t\t\t        }}\n\t\t\t\t\t\t\t    >\n\t\t\t\t\t\t\t        <CartesianGrid strokeDasharray=\"3 3\" />\n\t\t\t\t\t\t\t        <XAxis dataKey=\"name\"/>\n\t\t\t\t\t\t\t        <YAxis />\n\t\t\t\t\t\t\t        <Tooltip />\n\t\t\t\t\t\t\t        <Legend />\n\t\t\t\t\t\t\t        <Line type=\"monotone\" dataKey=\"sentiment\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n\t\t\t\t\t\t\t     </LineChart>\n\t\t\t\t\t\t     </ResponsiveContainer>\n\t\t\t\t\t\t</div>\n\t\t\t\t     </div>\n\t\t\t     )}\n\t\t\t\t</MContext.Consumer>\n\t\t    </div>\n\t\t)\n\t}\n}\n\nSentimentLineChart.contextType = MContext;\nexport default SentimentLineChart;","import React from 'react';\nimport { MContext } from './ChartProvider';\nimport FaceRoundedIcon from '@material-ui/icons/FaceRounded';\nimport SentimentVerySatisfiedRoundedIcon from '@material-ui/icons/SentimentVerySatisfiedRounded';\nimport SentimentSatisfiedRoundedIcon from '@material-ui/icons/SentimentSatisfiedRounded';\nimport SentimentDissatisfiedRoundedIcon from '@material-ui/icons/SentimentDissatisfiedRounded';\nimport SentimentVeryDissatisfiedRoundedIcon from '@material-ui/icons/SentimentVeryDissatisfiedRounded';\n\nclass OverallSentiment extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderEmoji = this.renderEmoji.bind(this);\n\t}\n\t\n\trenderEmoji(sentVal) {\n\t\tconsole.log(sentVal);\n\t\tif (sentVal >= 0.2 && sentVal <= 0.7) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<p>Positive</p>\n\t\t\t\t\t<SentimentSatisfiedRoundedIcon />\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t} else if (sentVal <= -0.2 && sentVal >= -0.7) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<p>Negative</p>\n\t\t\t\t\t<SentimentDissatisfiedRoundedIcon />\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t} else if (sentVal < -0.7) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<p>Very Negative</p>\n\t\t\t\t\t<SentimentVeryDissatisfiedRoundedIcon />\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t} else if (sentVal > 0.7) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<p>Very Positive</p>\n\t\t\t\t\t<SentimentVerySatisfiedRoundedIcon />\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t} else if (sentVal === \"\") {\n\t\t\treturn <p></p>\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<p>Neutral</p>\n\t\t\t\t\t<FaceRoundedIcon />\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>Latest Sentiment</p>\n\t\t\t\t<MContext.Consumer>\n\t\t\t\t\t{(context) => (\n\t\t\t\t\t\t<div>{this.renderEmoji(context.state.latestSen)}</div>\n\t\t\t\t\t)}\n\t\t\t\t</MContext.Consumer>\n\t\t    </div>\t\t\n\t\t)\n\t}\n}\n\nOverallSentiment.contextType = MContext;\nexport default OverallSentiment;","import React from 'react';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport { MContext } from './ChartProvider';\n\nclass Sentences extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<p>Sentences</p>\n\t\t\t\t<MContext.Consumer>\n\t\t\t\t\t{(context) => (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<ThumbUpIcon />\n\t\t\t\t\t\t\t<p>{context.state.posSent}</p>\n\t\t\t\t\t\t\t<ThumbDownIcon />\n\t\t\t\t\t\t\t<p>{context.state.negSent}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</MContext.Consumer>\n\t\t    </div>\t\n\t\t)\n\t}\n}\n\nSentences.contextType = MContext;\nexport default Sentences;","import React from 'react';\nimport ChartProvider from './ChartProvider';\nimport ListTopics from './ListTopics';\nimport MonitorTopicInput from './MonitorTopicInput'\nimport SentimentLineChart from './SentimentLineChart';\nimport OverallSentiment from './OverallSentiment';\nimport Sentences from './Sentences';\nimport './MonitoringModule.css';\nimport Divider from '@material-ui/core/Divider';\n\n\nclass MonitoringModule extends React.Component {\n\n    render() {\n        return (\n            <div className=\"Monitoring-module\">\n                <ChartProvider>\n                    <div className=\"Monitoring-component\">\n                        <MonitorTopicInput />\n                        <div>\n                            PREVIOUS TOPICS\n                            <ListTopics /> \n                        </div>             \n                    </div>\n                    <Divider variant=\"middle\" />\n                    <div className=\"Monitoring-component\">\n                        <OverallSentiment />\n                        <Sentences />\n                    </div>                      \n                    <Divider variant=\"middle\" />         \n                    <div className=\"Monitoring-component\">\n                        <SentimentLineChart />\n                    </div>                     \n                </ChartProvider>\n            </div>            \n        )\n    }\n}\nexport default MonitoringModule;","import React from 'react';\nimport logo from '../twitter.svg';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nclass MenuAppBar extends React.Component {\n\n    render() {\n      return (\n        <div className={this.props.classes.root}>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\" className={this.props.classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={this.props.classes.title}>\n\n                Tweet Analyzer\n              </Typography>\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </Toolbar>\n          </AppBar>\n        </div>\n      );\n    }\n\n}\n\nexport default withStyles(styles)(MenuAppBar);\n","import React from 'react';\nimport IngestionModule from '../ingestion/IngestionModule';\nimport MonitoringModule from '../monitoring/MonitoringModule';\nimport MenuAppBar from './MenuAppBar';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport './Navigation.css';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ModuleContainer() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n       <div className={classes.root}>\n          <MenuAppBar />\n          <AppBar position=\"static\">\n            <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n              <Tab label=\"MONITORING\" {...a11yProps(0)} />\n              <Tab label=\"INGESTION\" {...a11yProps(1)} />\n            </Tabs>\n          </AppBar>\n          <TabPanel value={value} index={0} className=\"Tab-panel\">\n            <MonitoringModule />            \n          </TabPanel>\n          <TabPanel value={value} index={1} className=\"Tab-panel\">\n            <IngestionModule />\n          </TabPanel>\n        </div>\n    );\n}","import { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport cyan from '@material-ui/core/colors/cyan';\n\nexport default createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: cyan\n  },\n  overrides: {\n  \tMuiButton: {\n  \t\troot: {\n  \t\t\tcolor: 'pink',\n  \t\t\tsize: 'large'\n  \t\t}\n  \t}\n  }\n});","import React from 'react';\nimport './App.css';\nimport ModuleContainer from './components/ModuleContainer'\nimport theme from './themes/Theme'\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"App\">\n                <ModuleContainer />\n            </div>\n        </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}